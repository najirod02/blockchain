{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "initial_balance",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "money",
						"type": "uint256"
					}
				],
				"name": "deposit",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "money",
						"type": "uint256"
					}
				],
				"name": "withdraw",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "a simple Bank system where a user can deposit or withdraw money. it is similar to the Counter exercises but in this case we need to include some checks on the available balance before allowing any withdraw, in this case, require() will be used as we will give back all gas not already used.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/es4/Bank.sol": "Bank"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/es4/Bank.sol": {
			"keccak256": "0xe2c128adc8cf63973080a8b706adfc8a79e5680a5ac98d8653f0eeaff3b6e6eb",
			"license": "MIT",
			"urls": [
				"bzz-raw://c8a594162bcd385701cd1f9fed4efc4843d862a5fd8f8625ebe5c6b6a7a59c29",
				"dweb:/ipfs/QmWQHPuPVQLFQxz9jLPdrtnENkXDyS4WdxrXUoZvRpTt6g"
			]
		}
	},
	"version": 1
}